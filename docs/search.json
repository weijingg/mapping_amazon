[
  {
    "objectID": "6_conclusion.html",
    "href": "6_conclusion.html",
    "title": "Conclusion",
    "section": "",
    "text": "Conclusion",
    "crumbs": [
      "Conclusion"
    ]
  },
  {
    "objectID": "index.html#overview",
    "href": "index.html#overview",
    "title": "Mapping the Amazon River",
    "section": "Overview",
    "text": "Overview\nThe middle-lower Amazon River has a complex morphology, where seasonal flooding has formed large floodplain lakes along the riverbanks. The lakes regulate river flow, store nutrient-rich sediments and are home to diverse species. In this project, the depth of 12 lakes along the Amazon River was estimated using flooding frequency, with areas that flood more being expected to be deeper. Depth data is valuable for ecological and hydrological research, such as determining biodiversity distribution and modeling water stratification.",
    "crumbs": [
      "Overview"
    ]
  },
  {
    "objectID": "analysis/3-Model.html",
    "href": "analysis/3-Model.html",
    "title": "IF-depth Model",
    "section": "",
    "text": "The relationship between inundation frequency (IF) and bathymetry is modelled using a boat survey conducted by a team of researchers at one of the lakes within the middle-lower Amazon reach – Curuai (Barbosa et al., 2006). The more frequently inundated parts of the lake are generally observed to be deeper, hence the depth of Curuai measured from the bathymetry survey is plotted against how often that part of Curuai is flooded.\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport rasterio as rio\n\n# Import Curuai IF\nIF_CR = rio.open(\"../data/IF_CR.tif\")\n\n# Read into a NumPy array (only 1 band)\nIF_CR_np = IF_CR.read(1)\n\n# Plot\nfig, ax = plt.subplots(figsize=(10, 4))\nimg = ax.imshow(IF_CR_np)\n\n# Set background to beige\nfig.patch.set_facecolor(\"#F9F8F2\")\nax.set_facecolor(\"#F9F8F2\")\n\n# Create an inset axes for the colorbar in the bottom right\ncax = ax.inset_axes([0.75, 0.8, 0.15, 0.03])  # [x, y, width, height]\n\n# Colorbar\ncbar = fig.colorbar(img, cax=cax, orientation='horizontal', shrink=0.3)\ncbar.ax.set_title(\"IF (%)\", fontsize=10, pad=4, color='white') # title\ncbar.outline.set_linewidth(0)                                  # remove black outline\ncbar.ax.tick_params(size=0)                                    # remove ticks\ncbar.ax.xaxis.set_tick_params(pad=4, colors='white')           # tick labels\n\n# Remove axes for clean aesthetics\nax.axis(\"off\")\n\n\n\n\n\n\n\n\nFigure 1: Inundation frequency at Curuai\n\n\n\n\n\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.colors as mcolors\nimport rasterio as rio\n\n# Import curuai reprojected\ncuruai_proj = rio.open(\"../data/Barbosa_bathy/Barbosa_bathy2.tif\")\n\n# Read into a NumPy array (only 1 band)\ncuruai_proj_np = curuai_proj.read(1)\n\n# Change &lt;0 to NaN\ncuruai_over0 = curuai_proj_np\ncuruai_over0[curuai_over0&lt;0]=np.nan\n\n# Define breaks\nbreaks = [0,1,2,3,4,5,6,7,9.999783]\n\n# Define discrete colormap\ncmap = plt.get_cmap('BuPu', len(breaks) - 1)\nnorm = mcolors.BoundaryNorm(breaks, cmap.N)\n\n# Plot\nfig, ax = plt.subplots(figsize=(9,14))\nimg = ax.imshow(curuai_over0, cmap=cmap, norm=norm)\n\n# Set background to beige\nfig.patch.set_facecolor(\"#F9F8F2\")\nax.set_facecolor(\"#F9F8F2\")\n\n# Create an inset axes for the colorbar in the bottom right\ncax = ax.inset_axes([0.7, 0.8, 0.15, 0.03])  # [x, y, width, height]\n\n# Colorbar\ncbar = fig.colorbar(img, cax=cax, orientation='horizontal', shrink=0.3)\ncbar.ax.set_title(\"Surveyed depth (m)\", fontsize=10, pad=4) # title\ncbar.outline.set_linewidth(0) # Remove the black outline\ncbar.ax.tick_params(size=0) # Remove ticks\n\n# Custom tick labels\ncbar.set_ticklabels(['0','','','','','','','','10'])\ncbar.ax.xaxis.set_tick_params(pad=4) # tick labels\n\n# Remove axes for clean aesthetics\nax.axis(\"off\")\n\n\n\n\n\n\n\n\nFigure 2: Surveyed depth at Curuai\n\n\n\n\n\nData points with IF below 50% are found at peripheral lake boundaries, which are elevated and mostly remain dry even during the wet season, or in small lakes (under 1 km2) disconnected from the river (Park et al., 2020). These points are excluded from the IF-depth model, to focus on the large and interconnected round lakes that are more sensitive to the model. Even with the exclusion of such points, 70.8% to 93.8% of the floodplain areas are retained for bathymetric calculations.\n\n\nCode\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# Load data on model\nmodel = pd.read_csv(\"../data/model.csv\")\n\ndef exponential_regression(x, y):\n    \"\"\"Calculates the exponential regression line for given x and y values.\"\"\"\n\n    # Transform the data into a linear relationship\n    log_y = np.log(y)\n\n    # Perform linear regression on the transformed data\n    coeffs = np.polyfit(x, log_y, 1)\n\n    # Extract the coefficients\n    a = np.exp(coeffs[1])\n    b = coeffs[0]\n\n    # Return the exponential function\n    return lambda x: a * np.exp(b * x)\n\nregression_func = exponential_regression(model['IF'],model['Depth'])\n\n# Trendline\ntrendline = regression_func(range(50, 100))\n\nfig, ax = plt.subplots(figsize=(10, 6))\n\nax.scatter(\n    model['IF'],\n    model['Depth'],\n    marker=\"o\",\n    alpha=0.75,\n    zorder=10\n)\n\n# Plot the regression line on top of the scatter plot\nax.plot(\n    range(50, 100),\n    trendline,\n    color = \"grey\",\n    linewidth=3,\n    zorder=15\n)\n\n# Annotate equation\nplt.text(53, 7.2, r'$y = 0.0008x^{1.9679}$', fontsize=12)\n\n# Format graph\nax.set_xlabel(\"Inundation Frequency (%)\") # x-axis label\nax.set_ylabel(\"Depth (m)\") # y-axis label\nax.set_facecolor('#F9F8F2') # background colour\nfig.patch.set_facecolor('#F9F8F2')\nax.spines['top'].set_visible(False) # turn off 2 lines\nax.spines['right'].set_visible(False)\n\n\n\n\n\n\n\n\nFigure 3: IF-depth model",
    "crumbs": [
      "Methods and Analysis",
      "IF-depth Model"
    ]
  },
  {
    "objectID": "analysis/2-Wetland.html",
    "href": "analysis/2-Wetland.html",
    "title": "Wetland Extent",
    "section": "",
    "text": "Wetland extent data was obtained from the Oakland Ridge National Laboratory Distributed Active Archive Centre (Hess et al., 2015). The raster was cropped to along the middle-lower Amazon River and resampled to the inundation frequency (IF) raster’s resolution. The raster contains information on wetland cover during both low-water and high-water stage in the Amazon, but because the IF-depth model is calibrated using survey data collected during the flooding season, the high-water stage wetland data was used to mask the IF data. For detailed code on how the raster was processed using rasterio and rioxarray, please refer to this repository.\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport rasterio as rio\nfrom matplotlib.patches import Patch\nfrom matplotlib.colors import ListedColormap\n\n# Import wetland extent\nwetland = rio.open(\"../data/wetland_nearest.tif\")\n\n# Read into a NumPy array (only 1 band)\nwetland_np = wetland.read(1)\n\n# Group values into categories\nwetland_group = np.zeros_like(wetland_np)  # Initialize grouped array\nwetland_group[wetland_np == 1] = 0 # Background\nwetland_group[(wetland_np == 11) | (wetland_np == 21) | (wetland_np == 41)| (wetland_np == 51)] = 1  # Open water\nwetland_group[(wetland_np == 13) | (wetland_np == 23) | (wetland_np == 33)] = 2  # Macrophyte\nwetland_group[(wetland_np == 44) | (wetland_np == 66)] = 3  # Non-flooded shrub/ woodland\nwetland_group[(wetland_np == 45) | (wetland_np == 55)] = 4  # Flooded shrub\nwetland_group[(wetland_np == 67) | (wetland_np == 77)] = 5  # Flooded woodland\nwetland_group[(wetland_np == 88)] = 6  # Non-flooded forest\nwetland_group[(wetland_np == 89) | (wetland_np == 99)] = 7  # Flooded forest\n\n# Custome palette\ncustom_colors = ['#000000','#2559DE', '#E432BF', '#EE8761', '#97EBD9', '#A0C0FF', '#FFFF00', '#59A52F']\ncmap = ListedColormap(custom_colors) # Create a discrete colormap\n\n# Custom labels\nlabels = [\n    \"\",\n    \"Open water\",\n    \"Macrophyte\",\n    \"Non-flooded shrub/ woodland\",\n    \"Flooded shrub\",\n    \"Flooded woodland\",\n    \"Non-flooded forest\",\n    \"Flooded forest\"\n]\n\n# Plot\nfig, ax = plt.subplots(figsize=(10, 4))\nimg = ax.imshow(wetland_group, cmap=cmap)\n\n# Set background to beige\nfig.patch.set_facecolor(\"#F9F8F2\")\nax.set_facecolor(\"#F9F8F2\")\n\n# Add a discrete legend\nlegend_patches = [Patch(color=custom_colors[i], label=labels[i]) for i in range(len(labels))]\nlegend = ax.legend(\n    handles=legend_patches,\n    loc='lower right',\n    bbox_to_anchor=(1.0, 0.05),\n    frameon=False, # No frame\n    fontsize=8,\n    ncol=2,                   # Split into 2 columns\n    columnspacing=1.2,        # Space between columns\n    labelcolor='white'        # White text\n)\n\n# Remove axes for clean aesthetics\nax.axis(\"off\")\n\n\n\n\n\n\n\n\nFigure 1: Wetland extent during high-water stage\n\n\n\n\n\nThe vegetation cover in the middle-lower Amazon is diverse, ranging from aquatic macrophytes (herbaceous plants) that grow in or near the water, to forests that are annually submerged under 10 metres of water.\n\n\n\n\n\nFigure 2: Macrophytes (Mortillaro et al., 2016)\n\n\n\n\n\n\n\nFigure 3: Flooded forest (Amazon Waters Alliance, 2024)",
    "crumbs": [
      "Methods and Analysis",
      "Wetland Extent"
    ]
  },
  {
    "objectID": "5-Comparison.html",
    "href": "5-Comparison.html",
    "title": "Comparison with Wetland",
    "section": "",
    "text": "Grouping the calculated bathymetry values by wetland cover and visualizing them as boxplots, an interesting pattern emerges. Wetland cover is grouped by colour into open water (OW), macrophytes (M), shrub, woodland, and forest. Considering the overall average of each group, the depth generally decreases from open water to flooded forests.\nHowever, within the open water group and the macrophyte group, there is significant variation. OW1: Open water in both low-water and high-water stage OW2: Non-flooded soil/ herbaceous, open water OW3: Non-flooded shrub, open water OW4: Flooded shrub, open water\nM1: Open water at low, macrophyte at high M2: Non-flooded soil/ herbaceous, macrophyte M3: Macrophyte, macrophyte\n\n\nCode\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport rasterio as rio\nimport seaborn as sns\n\n# Import bathymetry\nbathymetry = rio.open(\"data/bathymetry.tif\")\nbathymetry_np = bathymetry.read(1) # numpy array\nbath_values = bathymetry_np.flatten() # flatten\n\n# Import wetland extent\nwetland = rio.open(\"data/wetland_nearest.tif\")\nwetland_np = wetland.read(1) # numpy array\n\n# Group wetland values into categories\nwetland_group = np.zeros_like(wetland_np)  # Initialize grouped array\nwetland_group[(wetland_np == 0) | (wetland_np == 1)] = 0 # Background\nwetland_group[(wetland_np == 11)] = 1 # Open water A\nwetland_group[(wetland_np == 21)] = 2 # Open water B \nwetland_group[(wetland_np == 41)] = 3 # Open water C \nwetland_group[(wetland_np == 51)] = 4 # Open water D\nwetland_group[(wetland_np == 13)] = 5 # Macrophyte A \nwetland_group[(wetland_np == 23)] = 6 # Macrophyte B \nwetland_group[(wetland_np == 33)] = 7 # Macrophyte C\nwetland_group[(wetland_np == 45)] = 8 # Shrub\nwetland_group[(wetland_np == 77)] = 9 # Woodland\nwetland_group[(wetland_np == 88) | (wetland_np == 89) | (wetland_np == 99)] = 10  # Forest\n\n# Flatten the array\nwetland_values2 = wetland_group.flatten() \n\n# Create dataframe with bathymetry and grouped wetland values\ndf2 = pd.DataFrame({'Bathymetry': bath_values, 'Wetland': wetland_values2})\n\n# Exclude rows where the wetland category is 0\ndf_filtered = df2[df2['Wetland'] != 0]\n\n# Palette\npalette = ['#2559DE', '#2559DE', '#2559DE', '#2559DE', \n           '#E432BF', '#E432BF', '#E432BF', \n           '#A0C0FF', '#FFFF00', '#59A52F']\n\n# Labels\nlabels = ['OW1', 'OW2', 'OW3', 'OW4', 'M1', 'M2', 'M3', 'Shrub', 'Woodland', 'Forest']\n\n# Box plot using seaborn\nplt.figure(figsize=(10, 6))\nsns.boxplot(x='Wetland', y='Bathymetry', data=df_filtered, palette=palette, \n            showfliers=False,  # Turn off outliers\n            width=0.5,         # Make the boxes narrower\n            fliersize=0,       # Ensures that outliers are not shown, even if there are some left\n            linewidth=1.5,     # Adjust line width for the boxes\n            boxprops=dict(alpha=0.5))  # Set box transparency\n\n# Format graph\nplt.title(\"\")  # Remove default title\nplt.suptitle(\"\")\nplt.xticks(ticks=range(len(labels)), labels=labels, fontsize=10)  # Apply custom labels\nplt.xlabel(\"Wetland Cover\")  # x-axis label\nplt.ylabel(\"Depth (m)\")  # y-axis label\nplt.gca().set_facecolor('#F9F8F2')  # Background color\nplt.gcf().patch.set_facecolor('#F9F8F2')  # Figure background color\nplt.gca().spines['top'].set_visible(False)  # Turn off top axis line\nplt.gca().spines['right'].set_visible(False)  # Turn off right axis line\n\nplt.show()\n\n\n\n\n\n\n\n\nFigure 1: Box plot of bathymetry by wetland cover",
    "crumbs": [
      "Results: Bathymetry",
      "Comparison with Wetland"
    ]
  },
  {
    "objectID": "2_about.html",
    "href": "2_about.html",
    "title": "About Me",
    "section": "",
    "text": "I love maps, rocks and chocolates. I’m from Singapore, where I did my undergraduate degree in Earth Science. I have three years of research experience in GIS, remote sensing, hydrology, and geomorphology.  With an interest in languages, I’m fluent in English, Chinese, and Japanese.  If you would like to see more of my works, here is my portfolio!",
    "crumbs": [
      "About Me"
    ]
  },
  {
    "objectID": "2_about.html#hi-im-wei-jing",
    "href": "2_about.html#hi-im-wei-jing",
    "title": "About Me",
    "section": "",
    "text": "I love maps, rocks and chocolates. I’m from Singapore, where I did my undergraduate degree in Earth Science. I have three years of research experience in GIS, remote sensing, hydrology, and geomorphology.  With an interest in languages, I’m fluent in English, Chinese, and Japanese.  If you would like to see more of my works, here is my portfolio!",
    "crumbs": [
      "About Me"
    ]
  },
  {
    "objectID": "7_ref.html",
    "href": "7_ref.html",
    "title": "References",
    "section": "",
    "text": "References\nAmazon Aid, 2024. The Amazon and Water. https://amazonaid.org/resources/about-the-amazon/the-amazon-and-water/\nAmazon Waters Alliance, 2024. Wetland Forests. https://en.aguasamazonicas.org/wetlands/wetlands-types/wetland-forests\nAng, W.J., Park, E., & Alcantara, E. (2021). Mapping floodplain bathymetry in the middle-lower Amazon River using inundation frequency and field control. Geomorphology, 392, 107937. https://doi.org/10.1016/j.geomorph.2021.107937\nBarbosa, C.C.F., de Moraes Novo, E.M.L., Melack, J.M., de Freitas, R.M., & Pereira Filho, W. (2006). A methodology for analysis of volume and flooded area dynamics: Lago Grande de Curuai várzea as an example.\nHess, L.L., J.M. Melack, A.G. Affonso, C.C.F. Barbosa, M. Gastil-Buhl, and E.M.L.M. Novo. 2015. LBA-ECO LC-07 Wetland Extent, Vegetation, and Inundation: Lowland Amazon Basin. ORNL DAAC, Oak Ridge, Tennessee, USA. https://doi.org/10.3334/ORNLDAAC/1284\nJean-Francois Pekel, Andrew Cottam, Noel Gorelick, Alan S. Belward, 2016. High-resolution mapping of global surface water and its long-term changes. Nature 540, 418-422 (2016). https://doi.org/10.1038/nature20584\nJohnson, K.K., Duncker, J.J., & Jackson, P.R. (2012). The role of the US Geological Survey in Lake Michigan Diversion Accounting in Illinois, 1984-2010 (No. 2012-1243). US Geological Survey. https://doi.org/10.3133/ofr20121243\nMortillaro, J.M., Passarelli, C., Abril, G., Hubas, C., Albéric, P., Artigas, L.F., … & Meziane, T. (2016). The fate of C4 and C3 macrophyte carbon in central Amazon floodplain waters: Insights from a batch experiment. Limnologica, 59, 90-98. https://doi.org/10.1016/j.limno.2016.03.008\nPark, E., Emadzadeh, A., Alcântara, E., Yang, X., & Ho, H.L. (2020). Inferring floodplain bathymetry using inundation frequency. Journal of Environmental Management, 273, 111138. https://doi.org/10.1016/j.jenvman.2020.111138\nWang, Y., He, X., Bai, Y., Wang, D., Zhu, Q., Gong, F., … & Li, T. (2022). Satellite retrieval of benthic reflectance by combining lidar and passive high-resolution imagery: Case-I water. Remote Sensing of Environment, 272, 112955. https://doi.org/10.1016/j.rse.2022.112955",
    "crumbs": [
      "References"
    ]
  },
  {
    "objectID": "analysis/1-IF.html",
    "href": "analysis/1-IF.html",
    "title": "Inundation Frequency",
    "section": "",
    "text": "Inundation frequency (IF) data was obtained from the Global Surface Water Explorer Portal (Pekel et al., 2016). The water occurence tiles of 60W and 70W were merged and cropped to along the middle-lower Amazon River. Inundation frequency varies from 0% to 100%, where 0% indicates areas that remain dry throughout the year, 100% indicates areas that remain wet, while the values in between reflect seasonally flooded areas. For detailed code on how the raster was processed using rasterio and rioxarray, please refer to this repository.\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport rasterio as rio\n\n# Import IF cropped\nIF_crop = rio.open(\"../data/IF_crop.tif\")\n\n# Read into a NumPy array (only 1 band)\nIF_crop_np = IF_crop.read(1)\n\n# Plot\nfig, ax = plt.subplots(figsize=(10, 4))\nimg = ax.imshow(IF_crop_np)\n\n# Set background to beige\nfig.patch.set_facecolor(\"#F9F8F2\")\nax.set_facecolor(\"#F9F8F2\")\n\n# Create an inset axes for the colorbar in the bottom right\ncax = ax.inset_axes([0.8, 0.15, 0.15, 0.03])  # [x, y, width, height]\n\n# Colorbar\ncbar = fig.colorbar(img, cax=cax, orientation='horizontal', shrink=0.3)\ncbar.ax.set_title(\"IF (%)\", fontsize=10, pad=4, color='white') # title\ncbar.outline.set_linewidth(0)                                  # remove black outline\ncbar.ax.tick_params(size=0)                                    # remove ticks\ncbar.ax.xaxis.set_tick_params(pad=4, colors='white')           # tick labels\n\n# Remove axes for clean aesthetics\nax.axis(\"off\")\n\n\n\n\n\n\n\n\nFigure 1: Inundation frequency\n\n\n\n\n\n\n\n The floodplain lakes of the middle-lower Amazon exhibit an interesting morphology. Each floodplain contains multiple lakes that form a patch network, interconnected with one other and the Amazon River by floodplain channels. This unique morphology causes the water levels in the floodplains to be largely in sync with the water level changes in the Amazon River, leading to significant variation in flooding frequency across the middle-lower Amazon.\n\n\n\n\n\nFigure 2: Lake morphology",
    "crumbs": [
      "Methods and Analysis",
      "Inundation Frequency"
    ]
  },
  {
    "objectID": "analysis/analysis.html",
    "href": "analysis/analysis.html",
    "title": "Methods and Analysis",
    "section": "",
    "text": "Methods and Analysis\nIn this project, I focus on 12 floodplain lakes along the middle-lower Amazon, specifically investigating variations in their depths —  in other words, their bathymetry. Bathymetry data is useful in different research applications, such as determining sedimentation patterns, or the influence of water seasonality on floodplain biodiversity.\nCurrent methods on measuring bathymetry includes surveys that use an echo sounder attached to a boat. However, such surveys require much time, money, and manpower, hence are usually restricted to a small scale. To determine bathymetry on a larger scale, remote sensing is adopted, but many techniques are based on how light reflects off the water surface, which is less accurate when measuring cloudy water bodies like the Amazon lakes.\n\n\n\n\n\nFigure 1: Echo sounder (Johnson et al., 2012)\n\n\n\n\n\n\n\nFigure 2: Remote sensing (Wang et al., 2022)\n\n\n\n\n\nUsing inundation frequency\nConsidering the limitations of both methods, this project uses a new method involving inundation frequency (IF), which refers to how often a certain part of a floodplain is flooded. As deeper parts of the floodplain would be flooded more frequently, the relationship between IF and depth can be modelled. This IF-depth model is based on one of the floodplain lakes within the study reach called Curuai, which has been surveyed by a team of researchers, and is applied to the rest of the study area. To focus on the floodplains, a mask will be created using a wetland extent raster to exclude non-floodplain areas from the analysis. Overall, three data sources are used: inundation frequency (Pekel et al., 2016), wetland extent (Hess et al., 2015), and bathymetry survey at Curuai Lake (Barbosa et al., 2006).\n\n\n\n\nFigure 3: Methodology flowchart",
    "crumbs": [
      "Methods and Analysis"
    ]
  },
  {
    "objectID": "4-Bathymetry.html",
    "href": "4-Bathymetry.html",
    "title": "Results: Bathymetry",
    "section": "",
    "text": "Applying the IF-depth model to the inundation frequency across the middle-lower Amazon, the calculated bathymetry of the floodplain lakes ranges from 1.8m to 6.9m with respect to the high-water season. The shallowest depth starts at 1.8m because data points with IF under 50% were excluded.\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.colors as mcolors\nimport rasterio as rio\nimport geopandas as gpd\n\n# Import bathymetry\nbathymetry = rio.open(\"../data/bathymetry.tif\")\n\n# Read into a NumPy array (only 1 band)\nbathymetry_np = bathymetry.read(1)\n\n# Open hydropoly shapefile\nhydropoly_crop = gpd.read_file(\"../data/Hydropoly/hydropoly_crop.shp\")\n\n# Ensure same crs\nhydropoly_crop = hydropoly_crop.to_crs(epsg=bathymetry.crs.to_epsg())\n\n# Get the bounds of bathymetry\nminx, miny, maxx, maxy = bathymetry.bounds;  # (left, bottom, right, top)\n\n# Define color breaks\nbreaks2 = [1.763977570002549,\n 3.4,\n 5.2,\n 6.1,\n 6.900649783627833];\n\n# Define palette\namazon_palette = [\"#F1A790\",\"#DD6F78\",\"#BF6476\",\"#8E6781\"];\ncmap = mcolors.LinearSegmentedColormap.from_list('custom_cmap', list(zip(np.linspace(0, 1, len(amazon_palette)), amazon_palette)));\nnorm = mcolors.BoundaryNorm(breaks2, cmap.N);\n\n# Plot\nfig, ax = plt.subplots(figsize=(12, 8))\nimg = ax.imshow(bathymetry_np,cmap=cmap, extent=[minx, maxx, miny, maxy],norm=norm);\n\n# Add the river polygon\nhydropoly_crop.plot(ax=ax, facecolor=\"#355B7C\", edgecolor=\"none\",zorder=2)\n\n# Set background to beige\nfig.patch.set_facecolor(\"#F9F8F2\")\nax.set_facecolor(\"#F9F8F2\")\n\n# Create an inset axes for the colorbar in the bottom right\ncax = ax.inset_axes([0.8, 0.05, 0.15, 0.03])  # [x, y, width, height]\n\n# Colorbar\ncbar = fig.colorbar(img, cax=cax, orientation='horizontal', shrink=0.3)\ncbar.ax.set_title(\"Depth (m)\", fontsize=10, fontname='Raleway', pad=4) # Title\ncbar.outline.set_linewidth(0) # Remove the black outline\ncbar.ax.tick_params(size=0) # Remove ticks\ncbar.set_ticklabels(['1.8','','','','6.9']) # Custom tick labels\ncbar.ax.xaxis.set_tick_params(pad=4) # Tick labels\n\n# Define Avenir font properties\navenir_font = fm.FontProperties(family='Avenir',size=15)\n\n# Change tick label font and size\nfor label in cbar.ax.get_xticklabels():\n    label.set_fontproperties(avenir_font)\n\n# Title and layout\nplt.title(\"The Amazon River's floodplain lakes\", fontsize=18, fontweight=\"bold\", loc=\"left\", pad = 10, x=0.05,y=0.85, fontname='Raleway')\n\n# Remove axes for clean aesthetics\nax.axis(\"off\")\n\nplt.rcParams['figure.dpi'] = 300 \n\nplt.show()\n\n\n\n\n\nFigure 1: Bathymetry\n\n\nZooming into the 12 lakes of interest, they have varying depths. Most lakes lie on the alluvial plain, the flat surface along the river banks formed from deposition of sediments over time. These lakes are large, round, and more shallow (lakes 1, 2, 5, 6, 9, 10, 11). However, some lakes are incised in valleys, lying near the foot of the upland rocks, hence are generally deeper (lakes 3, 8, 12). Interestingly, lakes 4 and 7 are divided into half by a thick ridge, where the lower half nearer to the alluvial plain is shallower, while the upper half nearer to the valleys is deeper.\n\n\n\nFigure 2: Bathymetry of individual lakes",
    "crumbs": [
      "Results: Bathymetry"
    ]
  },
  {
    "objectID": "3_background.html",
    "href": "3_background.html",
    "title": "The Amazon",
    "section": "",
    "text": "The Amazon\nThe Amazon is the world’s largest river by volume of water. Flowing from the Andes to the Atlantic Ocean, its river basin covers nearly 40% of South America. The Amazon River carries more water than the next seven largest rivers combined, contributing 20% of the world’s freshwater river discharge to sea.\nThe middle-lower Amazon spans from the confluence with the Negro River to the confluence with the Tapajós River. Along this reach, large and complex floodplains lie on both sides of the river.\n\n\nCode\nimport folium\n\n# Set height\nf = folium.Figure(height=300)\n\n# Default OpenStreetMap basemap\nm = folium.Map(location=[-2.7, -57], zoom_start=7, control_scale=True).add_to(f)\n\n# Esri Satellite basemap\nesri_tile = folium.TileLayer(\n    tiles='https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n    attr='Esri',\n    name='Esri Satellite',  # This name will appear in the layer control\n    overlay=False,\n    control=True\n).add_to(m)\n\n# Toggle between layers\nfolium.LayerControl().add_to(m)\n\nm\n\n\n\n\n\n\n\nFigure 1: Middle-Lower Amazon River\n\n\n\n\n\n\nThe Amazon’s water level fluctuates seasonally by as much as 10 meters. During the low-water stage, water flows within the main channel. As the water level rises, it overflows the riverbanks, carrying sediments that are deposited as the water loses energy.\nThis flooding can last up to seven months each year. Over time, these sediment deposits accumulate, forming extensive floodplains. Within these floodplains, there are large water bodies known as floodplain lakes.\n\n\n\n\n\nFigure 2: Floodplain formation",
    "crumbs": [
      "The Amazon"
    ]
  }
]