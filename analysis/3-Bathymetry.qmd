---
title: "Bathymetry"
format:
  html:
    code-fold: true
---

Bathymetry was calculated using the IF raster and the IF-depth model. 

```{python}
#| label: fig-bath
#| fig-cap: "Bathymetry"

import numpy as np
import matplotlib.pyplot as plt
import matplotlib.colors as mcolors
import rasterio as rio
import geopandas as gpd

# Import bathymetry
bathymetry = rio.open("../data/bathymetry.tif")

# Read into a NumPy array (only 1 band)
bathymetry_np = bathymetry.read(1)

# Open hydropoly shapefile
hydropoly_crop = gpd.read_file("../data/Hydropoly/hydropoly_crop.shp")

# Ensure same crs
hydropoly_crop = hydropoly_crop.to_crs(epsg=bathymetry.crs.to_epsg())

# Get the bounds of bathymetry
minx, miny, maxx, maxy = bathymetry.bounds;  # (left, bottom, right, top)

# Define color breaks
breaks2 = [0.0008,
 3.4,
 5.2,
 6.1,
 6.900649783627833];

# Define palette
amazon_palette = ["#F1A790","#DD6F78","#BF6476","#8E6781"];
cmap = mcolors.LinearSegmentedColormap.from_list('custom_cmap', list(zip(np.linspace(0, 1, len(amazon_palette)), amazon_palette)));
norm = mcolors.BoundaryNorm(breaks2, cmap.N);

# Plot
fig, ax = plt.subplots(figsize=(10, 4))
img = ax.imshow(bathymetry_np,cmap=cmap, extent=[minx, maxx, miny, maxy],norm=norm);

# Add the river polygon
hydropoly_crop.plot(ax=ax, facecolor="#355B7C", edgecolor="none",zorder=2)

# Set background to beige
fig.patch.set_facecolor("#F9F8F2")
ax.set_facecolor("#F9F8F2")

# Create an inset axes for the colorbar in the bottom right
cax = ax.inset_axes([0.8, 0.05, 0.15, 0.03])  # [x, y, width, height]

# Colorbar
cbar = fig.colorbar(img, cax=cax, orientation='horizontal', shrink=0.3)
cbar.ax.set_title("Depth (m)", fontsize=10, pad=4) # Title
cbar.outline.set_linewidth(0) # Remove the black outline
cbar.ax.tick_params(size=0) # Remove ticks
# cbar.set_ticklabels(['0','','','','7']) # Custom tick labels
cbar.ax.xaxis.set_tick_params(pad=4) # Tick labels

# Remove axes for clean aesthetics
ax.axis("off")
```